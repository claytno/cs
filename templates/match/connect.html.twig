{% extends 'base.html.twig' %}

{% block title %}Conectar ao Servidor - {{ match.selectedMap }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .connect-container {
            background: linear-gradient(135deg, #0f1419 0%, #1a2332 100%);
            min-height: 100vh;
        }
        .server-card {
            background: rgba(0, 0, 0, 0.4);
            backdrop-filter: blur(15px);
            border: 2px solid rgba(59, 130, 246, 0.3);
            border-radius: 20px;
        }
        .connect-button {
            background: linear-gradient(45deg, #059669, #10b981);
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            color: white;
            font-weight: bold;
            font-size: 18px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.4);
        }
        .connect-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.6);
        }
        .map-preview {
            border-radius: 15px;
            overflow: hidden;
            border: 3px solid rgba(59, 130, 246, 0.5);
        }
        .copy-button {
            background: linear-gradient(45deg, #3b82f6, #1d4ed8);
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .copy-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);
        }
        .team-section {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .player-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .pulse {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
    </style>
{% endblock %}

{% block body %}
<div class="connect-container">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-5xl font-bold text-white mb-4">
                <i class="fas fa-server mr-3 text-green-500"></i>SERVIDOR PRONTO!
            </h1>
            <p class="text-xl text-gray-300">Mapa selecionado: <span class="text-yellow-400 font-bold">{{ match.selectedMap|replace({'de_': ''})|title }}</span></p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Informações do Servidor -->
            <div class="lg:col-span-2">
                <div class="server-card p-8 mb-8">
                    <h2 class="text-3xl font-bold text-white mb-6 text-center">
                        <i class="fas fa-globe mr-2"></i>INFORMAÇÕES DO SERVIDOR
                    </h2>
                    
                    <!-- Preview do Mapa -->
                    <div class="text-center mb-8">
                        <div class="map-preview inline-block">
                            <img src="/images/maps/{{ match.selectedMap }}_large.jpg" 
                                 alt="{{ match.selectedMap }}" 
                                 class="w-96 h-48 object-cover"
                                 onerror="this.src='/images/maps/default_large.jpg'">
                        </div>
                        <h3 class="text-2xl font-bold text-white mt-4">{{ match.selectedMap|replace({'de_': ''})|title }}</h3>
                    </div>

                    <!-- Comando de Conexão -->
                    <div class="bg-gray-900 rounded-lg p-6 mb-6">
                        <h4 class="text-lg font-bold text-gray-300 mb-3">
                            <i class="fas fa-terminal mr-2"></i>Comando de Conexão
                        </h4>
                        <div class="flex items-center gap-3">
                            <code id="connectCommand" class="flex-1 bg-black text-green-400 p-3 rounded font-mono text-lg">
                                {{ match.serverInfo }}
                            </code>
                            <button onclick="copyToClipboard()" class="copy-button">
                                <i class="fas fa-copy mr-2"></i>Copiar
                            </button>
                        </div>
                        <p class="text-sm text-gray-400 mt-2">
                            <i class="fas fa-info-circle mr-1"></i>
                            Abra o console do CS2 (tecla ~) e cole este comando
                        </p>
                    </div>

                    <!-- Botão Principal de Conexão -->
                    <div class="text-center">
                        <button onclick="connectToServer()" class="connect-button pulse">
                            <i class="fas fa-play mr-3"></i>CONECTAR AO SERVIDOR
                        </button>
                        <p class="text-sm text-gray-400 mt-3">
                            Clique para abrir diretamente no CS2 (se instalado)
                        </p>
                    </div>
                </div>

                <!-- Instruções -->
                <div class="bg-blue-900 bg-opacity-30 rounded-lg p-6">
                    <h3 class="text-xl font-bold text-blue-300 mb-4">
                        <i class="fas fa-question-circle mr-2"></i>Como Conectar
                    </h3>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                        <div>
                            <h4 class="font-bold text-white mb-2">Método 1: Automático</h4>
                            <ol class="text-gray-300 space-y-1">
                                <li>1. Tenha o CS2 aberto</li>
                                <li>2. Clique em "Conectar ao Servidor"</li>
                                <li>3. O jogo conectará automaticamente</li>
                            </ol>
                        </div>
                        <div>
                            <h4 class="font-bold text-white mb-2">Método 2: Manual</h4>
                            <ol class="text-gray-300 space-y-1">
                                <li>1. Copie o comando de conexão</li>
                                <li>2. Abra o console no CS2 (~)</li>
                                <li>3. Cole e pressione Enter</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Teams -->
            <div class="lg:col-span-1">
                <div class="space-y-6">
                    <!-- Time A -->
                    <div class="team-section">
                        <h3 class="text-xl font-bold text-blue-400 mb-4 text-center">
                            <i class="fas fa-users mr-2"></i>{{ match.lobbyA.name }}
                        </h3>
                        <div class="space-y-3">
                            {% for player in match.lobbyA.players %}
                                <div class="player-card">
                                    <div class="flex items-center gap-3">
                                        <img src="{{ player.user.steamAvatar ?: '/images/default-avatar.svg' }}" 
                                             alt="{{ player.user.displayName }}" 
                                             class="w-10 h-10 rounded-full">
                                        <div class="flex-1">
                                            <p class="font-semibold text-white">{{ player.user.displayName }}</p>
                                            {% if player.isLeader %}
                                                <p class="text-xs text-yellow-400">
                                                    <i class="fas fa-crown mr-1"></i>Capitão
                                                </p>
                                            {% endif %}
                                        </div>
                                        <div class="text-green-400">
                                            <i class="fas fa-circle text-xs"></i>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>

                    <!-- VS -->
                    <div class="text-center">
                        <div class="text-4xl text-yellow-500">
                            <i class="fas fa-sword"></i>
                        </div>
                    </div>

                    <!-- Time B -->
                    <div class="team-section">
                        <h3 class="text-xl font-bold text-red-400 mb-4 text-center">
                            <i class="fas fa-users mr-2"></i>{{ match.lobbyB.name }}
                        </h3>
                        <div class="space-y-3">
                            {% for player in match.lobbyB.players %}
                                <div class="player-card">
                                    <div class="flex items-center gap-3">
                                        <img src="{{ player.user.steamAvatar ?: '/images/default-avatar.svg' }}" 
                                             alt="{{ player.user.displayName }}" 
                                             class="w-10 h-10 rounded-full">
                                        <div class="flex-1">
                                            <p class="font-semibold text-white">{{ player.user.displayName }}</p>
                                            {% if player.isLeader %}
                                                <p class="text-xs text-yellow-400">
                                                    <i class="fas fa-crown mr-1"></i>Capitão
                                                </p>
                                            {% endif %}
                                        </div>
                                        <div class="text-green-400">
                                            <i class="fas fa-circle text-xs"></i>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>

                    <!-- Informações Adicionais -->
                    <div class="bg-gray-800 rounded-lg p-4">
                        <h4 class="font-bold text-gray-300 mb-3">
                            <i class="fas fa-info mr-2"></i>Informações da Partida
                        </h4>
                        <div class="text-sm text-gray-400 space-y-2">
                            <p><strong>Formato:</strong> MR12 (Primeiro a 13)</p>
                            <p><strong>Overtime:</strong> MR3</p>
                            <p><strong>Duração:</strong> ~45-60 min</p>
                            <p><strong>Servidor:</strong> Dedicated</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div id="loadingModal" class="hidden fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-gray-800 rounded-lg p-8 text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4"></div>
        <p class="text-white text-lg">Conectando ao servidor...</p>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function copyToClipboard() {
            const command = document.getElementById('connectCommand').textContent.trim();
            navigator.clipboard.writeText(command).then(() => {
                showNotification('Comando copiado!', 'success');
            }).catch(() => {
                // Fallback para browsers mais antigos
                const textArea = document.createElement('textarea');
                textArea.value = command;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                showNotification('Comando copiado!', 'success');
            });
        }

        function connectToServer() {
            const command = document.getElementById('connectCommand').textContent.trim();
            const steamUrl = `steam://connect/${command.replace('connect ', '')}`;
            
            // Mostrar loading
            document.getElementById('loadingModal').classList.remove('hidden');
            
            // Tentar abrir no Steam/CS2
            const link = document.createElement('a');
            link.href = steamUrl;
            link.click();
            
            // Esconder loading após 3 segundos
            setTimeout(() => {
                document.getElementById('loadingModal').classList.add('hidden');
                showNotification('Se o CS2 não abriu automaticamente, use o comando manual!', 'info');
            }, 3000);
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg text-white font-semibold transition-all transform translate-x-full`;
            
            switch (type) {
                case 'success':
                    notification.classList.add('bg-green-600');
                    break;
                case 'error':
                    notification.classList.add('bg-red-600');
                    break;
                default:
                    notification.classList.add('bg-blue-600');
            }
            
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 4000);
        }

        // Polling para verificar se a partida mudou de status
        setInterval(async () => {
            try {
                const response = await fetch('/match/status');
                const data = await response.json();
                
                if (data.stage !== 'connect') {
                    window.location.href = '/lobby';
                }
            } catch (error) {
                console.log('Erro ao verificar status:', error);
            }
        }, 5000);
    </script>
{% endblock %}
